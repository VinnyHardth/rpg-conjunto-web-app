services:
  mysql:
    container_name: dbrpg-manager
    image: mysql:latest
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - ${MYSQL_PORT}:3306
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - rpg-manager-network
  phpmyadmin:
    container_name: phprpg-manager
    image: phpmyadmin/phpmyadmin
    environment:
      - PMA_HOST=${PMA_HOST}
      - PMA_PORT=${PMA_PORT}
      - PMA_USER=${PMA_USER}
      - PMA_PASSWORD=${PMA_PASSWORD}
    ports:
      - ${PHPMYADMIN_PORT}:80
    networks:
      - rpg-manager-network
  backend:
    container_name: backend_rpg-manager
    build:
      context: .
      dockerfile: backend/Dockerfile
      args:
        - VERSION=v1
    volumes:
      - ./backend/:/app/
      - /app/node_modules
    expose:
      - "3000"
    env_file:
      - .env              # ← global (na raiz)
      - ./backend/.env    # ← local (dentro do backend)
    environment:
      # Injects the public-facing URL for Swagger and other services to use.
      - PUBLIC_API_URL=http://localhost:${FRONTEND_PORT}
    stdin_open: true
    tty: true
    depends_on:
      mysql: { condition: service_healthy }
    networks:
      - rpg-manager-network
  frontend:
    container_name: frontend_rpg-manager
    build:
      context: .
      dockerfile: frontend/Dockerfile
      args:
        - VERSION=v1
    expose:
      - "4000"
    volumes:
      - ./frontend/:/app/
      - /app/node_modules
      - /app/.next
    environment:
      - NEXT_TELEMETRY_DISABLED=1
    stdin_open: true
    tty: true
    networks:
      - rpg-manager-network

  nginx:
    container_name: nginx_rpg-manager
    image: nginx:latest
    ports:
      - "${FRONTEND_PORT}:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - rpg-manager-network

networks:
  rpg-manager-network:
    driver: bridge
volumes:
  mysql_data:
  mysql_config:
